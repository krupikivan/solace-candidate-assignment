services:
  solace-nginx:
    image: nginx:alpine
    container_name: solace-nginx
    restart: unless-stopped
    ports:
      - "8085:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      solace-app:
        condition: service_healthy
    networks:
      - solace-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  solace-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: solace-app
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@solace-db:5432/solaceassignment
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      solace-db:
        condition: service_healthy
    networks:
      - solace-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/advocates"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  solace-db:
    image: postgres:16-alpine
    container_name: solace-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: solaceassignment
    volumes:
      - psql:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - solace-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d solaceassignment"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  psql:

networks:
  solace-network:
    driver: bridge
